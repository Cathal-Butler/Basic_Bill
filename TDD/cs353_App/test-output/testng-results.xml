<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="7" failed="0" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-04-30T10:59:13 IST" name="Default suite" finished-at="2021-04-30T11:01:06 IST" duration-ms="112582">
    <groups>
    </groups>
    <test started-at="2021-04-30T10:59:13 IST" name="Default test" finished-at="2021-04-30T11:01:06 IST" duration-ms="112582">
      <class name="cs353.basicBillTest">
        <test-method is-config="true" signature="setupDriver()[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T10:59:13 IST" name="setupDriver" finished-at="2021-04-30T10:59:21 IST" duration-ms="7761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupDriver -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T10:59:21 IST" name="setUp" finished-at="2021-04-30T10:59:59 IST" duration-ms="38250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T10:59:59 IST" name="invalidDataTests" data-provider="invalidCalculatorData" finished-at="2021-04-30T11:00:00 IST" duration-ms="557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[217]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidDataTests -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:00 IST" name="takeScreenShotOnFailure" finished-at="2021-04-30T11:00:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidDataTests status=SUCCESS method=basicBillTest.invalidDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:00 IST" name="setUp" finished-at="2021-04-30T11:00:07 IST" duration-ms="7498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:07 IST" name="invalidDataTests" data-provider="invalidCalculatorData" finished-at="2021-04-30T11:00:08 IST" duration-ms="540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[testing]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[textInput]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidDataTests -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:08 IST" name="takeScreenShotOnFailure" finished-at="2021-04-30T11:00:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidDataTests status=SUCCESS method=basicBillTest.invalidDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:08 IST" name="setUp" finished-at="2021-04-30T11:00:13 IST" duration-ms="5200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:13 IST" name="validDataTests" data-provider="validCalculatorData" finished-at="2021-04-30T11:00:14 IST" duration-ms="556" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[08/04/2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validDataTests -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:14 IST" name="takeScreenShotOnFailure" finished-at="2021-04-30T11:00:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validDataTests status=SUCCESS method=basicBillTest.validDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:14 IST" name="setUp" finished-at="2021-04-30T11:00:21 IST" duration-ms="7297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:21 IST" name="validDataTests" data-provider="validCalculatorData" finished-at="2021-04-30T11:00:22 IST" duration-ms="543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[07/04/2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validDataTests -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:22 IST" name="takeScreenShotOnFailure" finished-at="2021-04-30T11:00:22 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validDataTests status=SUCCESS method=basicBillTest.validDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:22 IST" name="setUp" finished-at="2021-04-30T11:00:27 IST" duration-ms="4998" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:27 IST" name="validDataTests" data-provider="validCalculatorData" finished-at="2021-04-30T11:00:27 IST" duration-ms="570" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[06/03/2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Valid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validDataTests -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:27 IST" name="takeScreenShotOnFailure" finished-at="2021-04-30T11:00:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validDataTests status=SUCCESS method=basicBillTest.validDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:27 IST" name="setUp" finished-at="2021-04-30T11:00:36 IST" duration-ms="8736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:36 IST" name="validDataTests" data-provider="validCalculatorData" finished-at="2021-04-30T11:00:36 IST" duration-ms="543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[06/03/2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validDataTests -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:36 IST" name="takeScreenShotOnFailure" finished-at="2021-04-30T11:00:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validDataTests status=SUCCESS method=basicBillTest.validDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:36 IST" name="setUp" finished-at="2021-04-30T11:00:41 IST" duration-ms="4678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:41 IST" name="validDataTests" data-provider="validCalculatorData" finished-at="2021-04-30T11:00:42 IST" duration-ms="560" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12/12/2022]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validDataTests -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:42 IST" name="takeScreenShotOnFailure" finished-at="2021-04-30T11:00:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validDataTests status=SUCCESS method=basicBillTest.validDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:00:42 IST" name="setUp" finished-at="2021-04-30T11:01:06 IST" duration-ms="24206" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[chrome not reachable
  (Session info: chrome=90.0.4430.93)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-CNGHAK3', ip: '192.168.1.17', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\catha\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59173}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 4f8ab06d9f88644e40afa9b545281bb0
*** Element info: {Using=id, value=expenseDate}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=90.0.4430.93)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-CNGHAK3', ip: '192.168.1.17', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\catha\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59173}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 4f8ab06d9f88644e40afa9b545281bb0
*** Element info: {Using=id, value=expenseDate}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:182)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:179)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at cs353.basicBillTest.setUp(basicBillTest.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:61)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:366)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:320)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:701)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:01:06 IST" name="validDataTests" data-provider="validCalculatorData" finished-at="2021-04-30T11:01:06 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[-100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[01/01/2021]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[chrome not reachable
  (Session info: chrome=90.0.4430.93)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-CNGHAK3', ip: '192.168.1.17', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\catha\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59173}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 4f8ab06d9f88644e40afa9b545281bb0
*** Element info: {Using=id, value=expenseDate}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=90.0.4430.93)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-CNGHAK3', ip: '192.168.1.17', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\catha\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59173}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 4f8ab06d9f88644e40afa9b545281bb0
*** Element info: {Using=id, value=expenseDate}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:182)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:179)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at cs353.basicBillTest.setUp(basicBillTest.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:61)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:366)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:320)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:701)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validDataTests -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:01:06 IST" name="takeScreenShotOnFailure" finished-at="1970-01-01T01:00:00 IST" duration-ms="-1619776866337" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method signature="validDataTests(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:01:06 IST" name="validDataTests" data-provider="validCalculatorData" finished-at="2021-04-30T11:01:06 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[chrome not reachable
  (Session info: chrome=90.0.4430.93)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-CNGHAK3', ip: '192.168.1.17', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\catha\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59173}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 4f8ab06d9f88644e40afa9b545281bb0
*** Element info: {Using=id, value=expenseDate}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=90.0.4430.93)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'DESKTOP-CNGHAK3', ip: '192.168.1.17', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\catha\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:59173}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 4f8ab06d9f88644e40afa9b545281bb0
*** Element info: {Using=id, value=expenseDate}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:182)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:179)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at cs353.basicBillTest.setUp(basicBillTest.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:61)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:366)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:320)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:701)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validDataTests -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:01:06 IST" name="setUp" finished-at="1970-01-01T01:00:00 IST" duration-ms="-1619776866338" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:01:06 IST" name="takeScreenShotOnFailure" finished-at="1970-01-01T01:00:00 IST" duration-ms="-1619776866341" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="shutdown()[pri:0, instance:cs353.basicBillTest@27ae2fd0]" started-at="2021-04-30T11:01:06 IST" name="shutdown" finished-at="1970-01-01T01:00:00 IST" duration-ms="-1619776866343" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shutdown -->
      </class> <!-- cs353.basicBillTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
